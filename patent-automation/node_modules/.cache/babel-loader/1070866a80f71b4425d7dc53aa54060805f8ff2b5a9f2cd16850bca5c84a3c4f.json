{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srikars Den\\\\OneDrive\\\\Desktop\\\\patent-automation\\\\patent-automation\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./Main.css\"; // <-- Import the advanced styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [checkNovelty, setCheckNovelty] = useState(false);\n  const [patentData, setPatentData] = useState(\"\");\n\n  // Access the location object\n  const location = useLocation();\n  // Extract title and description from location.state\n  const {\n    title,\n    description\n  } = location.state || {};\n\n  // Fetch patent data from the backend when the component mounts.\n  useEffect(() => {\n    const getPatentData = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/generate\", {\n          title: title,\n          description: description\n        });\n        if (response.status === 200) {\n          setPatentData(response.data.generated_patent_section);\n        }\n      } catch (error) {\n        console.error(\"Error fetching patent data:\", error);\n      }\n    };\n    getPatentData();\n  }, [title, description]);\n\n  // Function to check novelty\n  const novelty = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/search\", {\n        query: description\n      });\n      if (response.status === 200) {\n        setCheckNovelty(response.data.isNovel);\n      }\n    } catch (error) {\n      alert(\"Error during novelty check: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gradient-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"page-heading\",\n          children: \"Patent Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), title && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"submission-info\",\n          children: [\"Title: \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"submission-info\",\n          children: [\"Description: \", description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"novelty-info\",\n        children: checkNovelty ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"novelty-text novelty-yes\",\n          children: \"Your patent is novel.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"novelty-text novelty-no\",\n          children: \"There are too many similarities to your patent.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patent-content-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patent-content\",\n          dangerouslySetInnerHTML: {\n            __html: patentData\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: novelty,\n          children: \"Check Novelty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Main, \"Ql6jA9J48t4sk+5vOAMv7tFJDCk=\", false, function () {\n  return [useLocation];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","checkNovelty","setCheckNovelty","patentData","setPatentData","location","title","description","state","getPatentData","response","post","status","data","generated_patent_section","error","console","novelty","query","isNovel","alert","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Srikars Den/OneDrive/Desktop/patent-automation/patent-automation/src/components/Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./Main.css\"; // <-- Import the advanced styling\r\n\r\nexport default function Main() {\r\n  const [checkNovelty, setCheckNovelty] = useState(false);\r\n  const [patentData, setPatentData] = useState(\"\");\r\n\r\n  // Access the location object\r\n  const location = useLocation();\r\n  // Extract title and description from location.state\r\n  const { title, description } = location.state || {};\r\n\r\n  // Fetch patent data from the backend when the component mounts.\r\n  useEffect(() => {\r\n    const getPatentData = async () => {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/generate\", {\r\n          title: title,\r\n          description: description,\r\n        });\r\n        if (response.status === 200) {\r\n          setPatentData(response.data.generated_patent_section);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching patent data:\", error);\r\n      }\r\n    };\r\n    getPatentData();\r\n  }, [title, description]);\r\n\r\n  // Function to check novelty\r\n  const novelty = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/search\", {\r\n        query: description,\r\n      });\r\n      if (response.status === 200) {\r\n        setCheckNovelty(response.data.isNovel);\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error during novelty check: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Animated Gradient Background */}\r\n      <div className=\"gradient-background\" />\r\n\r\n      {/* Glass Container */}\r\n      <div className=\"main-container\">\r\n        <div className=\"header-section\">\r\n          <h1 className=\"page-heading\">Patent Details</h1>\r\n          {title && <p className=\"submission-info\">Title: {title}</p>}\r\n          {description && (\r\n            <p className=\"submission-info\">Description: {description}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"novelty-info\">\r\n          {checkNovelty ? (\r\n            <h2 className=\"novelty-text novelty-yes\">Your patent is novel.</h2>\r\n          ) : (\r\n            <h2 className=\"novelty-text novelty-no\">\r\n              There are too many similarities to your patent.\r\n            </h2>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"patent-content-container\">\r\n          {/* \r\n            If your generated text includes HTML styling, you can use:\r\n            <div dangerouslySetInnerHTML={{ __html: patentData }} />\r\n            Otherwise, <p>{patentData}</p> is fine.\r\n          */}\r\n          <div\r\n            className=\"patent-content\"\r\n            dangerouslySetInnerHTML={{ __html: patentData }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"button-container\">\r\n          <button className=\"action-button\" onClick={novelty}>\r\n            Check Novelty\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}