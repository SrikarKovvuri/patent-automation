{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srikars Den\\\\OneDrive\\\\Desktop\\\\patent-automation\\\\patent-automation\\\\src\\\\components\\\\Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport \"./Main.css\"; // <-- Import the CSS file (create Main.css in the same folder)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [checkNovelty, setCheckNovelty] = useState(false);\n  const [patentData, setPatentData] = useState(\"\");\n\n  // 1) Access the location object\n  const location = useLocation();\n\n  // 2) Extract title and description from location.state\n  const {\n    title,\n    description\n  } = location.state || {};\n\n  // Fetch patent data from the backend when the component mounts.\n  useEffect(() => {\n    const getPatentData = async () => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/generate\", {\n          title: title,\n          description: description\n        });\n        if (response.status === 200) {\n          setPatentData(response.data.generated_patent_section);\n        }\n      } catch (error) {\n        console.error(\"Error fetching patent data:\", error);\n      }\n    };\n    getPatentData();\n  }, [title, description]);\n\n  // Function to check novelty using the /search endpoint.\n  const novelty = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/search\", {\n        query: description // Using description as the query\n      });\n      if (response.status === 200) {\n        setCheckNovelty(response.data.isNovel);\n      }\n    } catch (error) {\n      alert(\"Error during novelty check: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header-title\",\n        children: \"Patent Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), title && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"header-subtitle\",\n        children: [\"Title: \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"header-subtitle\",\n        children: [\"Description: \", description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"novelty-info\",\n      children: checkNovelty ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"novelty-yes\",\n        children: \"Your patent is novel.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"novelty-no\",\n        children: \"There are too many similarities to your patent.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patent-content-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patent-content\",\n        dangerouslySetInnerHTML: {\n          __html: patentData\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"novelty-button\",\n        onClick: novelty,\n        children: \"Check Novelty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"Ql6jA9J48t4sk+5vOAMv7tFJDCk=\", false, function () {\n  return [useLocation];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","axios","useLocation","jsxDEV","_jsxDEV","Main","_s","checkNovelty","setCheckNovelty","patentData","setPatentData","location","title","description","state","getPatentData","response","post","status","data","generated_patent_section","error","console","novelty","query","isNovel","alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Srikars Den/OneDrive/Desktop/patent-automation/patent-automation/src/components/Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport \"./Main.css\"; // <-- Import the CSS file (create Main.css in the same folder)\r\n\r\nexport default function Main() {\r\n  const [checkNovelty, setCheckNovelty] = useState(false);\r\n  const [patentData, setPatentData] = useState(\"\");\r\n\r\n  // 1) Access the location object\r\n  const location = useLocation();\r\n\r\n  // 2) Extract title and description from location.state\r\n  const { title, description } = location.state || {};\r\n\r\n  // Fetch patent data from the backend when the component mounts.\r\n  useEffect(() => {\r\n    const getPatentData = async () => {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/generate\", {\r\n          title: title,\r\n          description: description,\r\n        });\r\n        if (response.status === 200) {\r\n          setPatentData(response.data.generated_patent_section);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching patent data:\", error);\r\n      }\r\n    };\r\n    getPatentData();\r\n  }, [title, description]);\r\n\r\n  // Function to check novelty using the /search endpoint.\r\n  const novelty = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/search\", {\r\n        query: description, // Using description as the query\r\n      });\r\n      if (response.status === 200) {\r\n        setCheckNovelty(response.data.isNovel);\r\n      }\r\n    } catch (error) {\r\n      alert(\"Error during novelty check: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      {/* Header / Title Section */}\r\n      <div className=\"header-container\">\r\n        <h1 className=\"header-title\">Patent Details</h1>\r\n        {/* Optionally show the original title & description if you want */}\r\n        {title && <p className=\"header-subtitle\">Title: {title}</p>}\r\n        {description && (\r\n          <p className=\"header-subtitle\">Description: {description}</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Novelty Info */}\r\n      <div className=\"novelty-info\">\r\n        {checkNovelty ? (\r\n          <h2 className=\"novelty-yes\">Your patent is novel.</h2>\r\n        ) : (\r\n          <h2 className=\"novelty-no\">There are too many similarities to your patent.</h2>\r\n        )}\r\n      </div>\r\n\r\n      {/* Patent Content */}\r\n      <div className=\"patent-content-container\">\r\n        {/* \r\n          Use dangerouslySetInnerHTML if your content can include HTML formatting.\r\n          If it's plain text, you can just do <p>{patentData}</p>.\r\n        */}\r\n        <div\r\n          className=\"patent-content\"\r\n          dangerouslySetInnerHTML={{ __html: patentData }}\r\n        />\r\n      </div>\r\n\r\n      {/* Button to Check Novelty */}\r\n      <div className=\"button-container\">\r\n        <button className=\"novelty-button\" onClick={novelty}>\r\n          Check Novelty\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM;IAAEU,KAAK;IAAEC;EAAY,CAAC,GAAGF,QAAQ,CAACG,KAAK,IAAI,CAAC,CAAC;;EAEnD;EACAd,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,gCAAgC,EAAE;UAClEL,KAAK,EAAEA,KAAK;UACZC,WAAW,EAAEA;QACf,CAAC,CAAC;QACF,IAAIG,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3BR,aAAa,CAACM,QAAQ,CAACG,IAAI,CAACC,wBAAwB,CAAC;QACvD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDN,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,KAAK,EAAEC,WAAW,CAAC,CAAC;;EAExB;EACA,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,8BAA8B,EAAE;QAChEO,KAAK,EAAEX,WAAW,CAAE;MACtB,CAAC,CAAC;MACF,IAAIG,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3BV,eAAe,CAACQ,QAAQ,CAACG,IAAI,CAACM,OAAO,CAAC;MACxC;IACF,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdK,KAAK,CAAC,8BAA8B,GAAGL,KAAK,CAACM,OAAO,CAAC;IACvD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE7BzB,OAAA;MAAKwB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BzB,OAAA;QAAIwB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAE/CrB,KAAK,iBAAIR,OAAA;QAAGwB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAAC,SAAO,EAACjB,KAAK;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC1DpB,WAAW,iBACVT,OAAA;QAAGwB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GAAC,eAAa,EAAChB,WAAW;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAC7D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGN7B,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BtB,YAAY,gBACXH,OAAA;QAAIwB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAEtD7B,OAAA;QAAIwB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAA+C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAC/E;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGN7B,OAAA;MAAKwB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eAKvCzB,OAAA;QACEwB,SAAS,EAAC,gBAAgB;QAC1BM,uBAAuB,EAAE;UAAEC,MAAM,EAAE1B;QAAW;MAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGN7B,OAAA;MAAKwB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BzB,OAAA;QAAQwB,SAAS,EAAC,gBAAgB;QAACQ,OAAO,EAAEb,OAAQ;QAAAM,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CAnFuBD,IAAI;EAAA,QAKTH,WAAW;AAAA;AAAAmC,EAAA,GALNhC,IAAI;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}